{
  "version": 4,
  "terraform_version": "0.12.24",
  "serial": 5,
  "lineage": "ce82477e-ec32-1b05-f631-44936bdb300d",
  "outputs": {
    "app_role_mount_point": {
      "value": "approle",
      "type": "string"
    },
    "namespace": {
      "value": "marketing",
      "type": "string"
    },
    "role_id": {
      "value": "49923e7d-c0a9-cfce-feff-54f7ee2b7760",
      "type": "string"
    },
    "role_name": {
      "value": "terraform",
      "type": "string"
    },
    "secret_id": {
      "value": "2082ca85-e85f-beaf-bbff-1be5803f7b4d",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "vault_approle_auth_backend_role",
      "name": "terraform",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "approle",
            "bind_secret_id": true,
            "bound_cidr_list": null,
            "id": "auth/approle/role/terraform",
            "period": 0,
            "policies": null,
            "role_id": "49923e7d-c0a9-cfce-feff-54f7ee2b7760",
            "role_name": "terraform",
            "secret_id_bound_cidrs": null,
            "secret_id_num_uses": 0,
            "secret_id_ttl": 0,
            "token_bound_cidrs": null,
            "token_explicit_max_ttl": 0,
            "token_max_ttl": 0,
            "token_no_default_policy": false,
            "token_num_uses": 0,
            "token_period": 0,
            "token_policies": [
              "default",
              "terraform"
            ],
            "token_ttl": 0,
            "token_type": "default"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "vault_auth_backend.approle"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_approle_auth_backend_role_secret_id",
      "name": "id",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "accessor": "3b341e39-42c3-8b3c-bfdc-08d6bf8ab3cc",
            "backend": "approle",
            "cidr_list": null,
            "id": "backend=approle::role=terraform::accessor=3b341e39-42c3-8b3c-bfdc-08d6bf8ab3cc",
            "metadata": "{\"source\":\"Generated by Terraform Vault Provider\"}",
            "role_name": "terraform",
            "secret_id": "2082ca85-e85f-beaf-bbff-1be5803f7b4d",
            "wrapping_accessor": null,
            "wrapping_token": null,
            "wrapping_ttl": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "vault_approle_auth_backend_role.terraform",
            "vault_auth_backend.approle"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_auth_backend",
      "name": "approle",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "accessor": "auth_approle_4c89d40c",
            "default_lease_ttl_seconds": 3600,
            "description": "AppRole managed by Terraform",
            "id": "approle",
            "listing_visibility": "",
            "local": false,
            "max_lease_ttl_seconds": 10800,
            "path": "approle",
            "tune": [
              {
                "allowed_response_headers": [],
                "audit_non_hmac_request_keys": [],
                "audit_non_hmac_response_keys": [],
                "default_lease_ttl": "3600s",
                "listing_visibility": "",
                "max_lease_ttl": "10800s",
                "passthrough_request_headers": [],
                "token_type": ""
              }
            ],
            "type": "approle"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_policy",
      "name": "terraform",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "terraform",
            "name": "terraform",
            "policy": "# Manage namespaces\npath \"sys/namespaces/*\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Manage policies\npath \"sys/policies/acl/*\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# List policies\npath \"sys/policies/acl\" {\n   capabilities = [\"list\"]\n}\n\n# Enable Auth management\npath \"sys/auth\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Enable Kubernetes Auth mounting\npath \"sys/auth/\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Enable and manage secrets engines\npath \"sys/mounts/*\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\"]\n}\n\n# Enable and manage secrets engines\npath \"sys/mounts\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\"]\n}\n\n# Create and manage entities and groups\npath \"identity/*\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\"]\n}\n\n# Manage tokens\npath \"auth/token/*\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Authorize k8s auth configuration\npath \"auth//config\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Authorize k8s role management within namespace\npath \"auth//role/*\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Allow TF to operate kv store\npath \"kv/*\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Allow TF to operate ssh secret engine\npath \"ssh/*\" {\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Authorize gcp auth configuration\npath \"sys/auth/gcp\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Authorize gcp auth configuration\npath \"auth/gcp/config\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Authorize gcp role management within namespace\npath \"auth/gcp/role/*\" {\n   capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n"
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
